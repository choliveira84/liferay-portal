definition {

	macro changeDisplayStyle {
		Click(locator1 = "PublicationsChanges#CURRENT_DISPLAY_STYLE");

		MenuItem.click(menuItem = StringUtil.upperCaseFirstLetter("${displayStyle}"));
	}

	macro viewChangesViaChangesStyle {
		if ("${publishedPublication}" == "true") {
			Click(
				key_publicationName = "Publication Name",
				locator1 = "Publications#PUBLISHED_PUBLICATION_NAME");
		}
		else {
			PublicationsChanges.changeDisplayStyle(displayStyle = "Changes");
		}

		if ("${showAllItems}" == "true") {
			Check.checkToggleSwitch(locator1 = "PublicationsSettings#SHOW_ALL_ITEMS_TOGGLE_SWITCH");
		}

		Pause(locator1 = "3000");

		var key_changeCategory = "${changeCategory}";
		var key_changeUser = "${changeUser}";
		var key_changeSite = "${changeSite}";
		var key_changeTitle = "${changeTitle}";
		var key_changeType = "${changeType}";

		if (isSet(changeOrder)) {
			var changeOrder = "${changeOrder}";
		}
		else {
			var changeOrder = "1";
		}

		while (IsElementNotPresent(locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_USER")) {
			Click(locator1 = "Pagination#NEXT_LINK");
		}

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_SITE",
			value1 = "${changeSite}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TITLE",
			value1 = "${changeTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#PUBLICATIONS_CHANGE_TYPE",
			value1 = "${changeType}");
	}

	macro viewChangesViaContextStyle {
		PublicationsChanges.changeDisplayStyle(displayStyle = "Context");

		Pause(locator1 = "3000");

		if ("${showAllItems}" == "true") {
			Check.checkToggleSwitch(locator1 = "PublicationsSettings#SHOW_ALL_ITEMS_TOGGLE_SWITCH");
		}

		var key_changeCategory = "${changeCategory}";
		var key_changeDescription = "${changeDescription}";
		var key_changeTitle = "${changeTitle}";

		Click.javaScriptClick(locator1 = "PublicationsChanges#CONTEXT_CHANGE_CATEGORY_RADIO");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#CONTEXT_CHANGE_TITLE",
			value1 = "${changeTitle}");

		AssertTextEquals.assertPartialText(
			locator1 = "PublicationsChanges#CONTEXT_CHANGE_DESCRIPTION",
			value1 = "${changeDescription}");
	}

	macro viewDDLRecordChangeDiff {
		if (IsElementNotPresent(locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM", key_displayItem = "Unified")) {
			Publications.changeDiffDisplayItem(displayItem = "Unified");
		}

		var key_fieldName = "${fieldName}";

		if (isSet(diffAddedValue)) {
			key_diffAddedValue = "${diffAddedValue}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#DDL_RECORD_DIFF_ADDED_VALUE",
				value1 = "${diffAddedValue}");
		}

		Publications.changeDiffDisplayItem(displayItem = "Production");

		AssertTextEquals(
			key_displayItem = "Production",
			locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
			value1 = "Production");

		if (isSet(fieldValueInProduction)) {
			key_fieldValueInProduction = "${fieldValueInProduction}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#FIELD_VALUE_IN_PRODUCTION",
				value1 = "${fieldValueInProduction}");
		}

		Publications.changeDiffDisplayItem(displayItem = "Publication: ${publicationName}");

		AssertTextEquals.assertPartialText(
			key_displayItem = "${publicationName}",
			locator1 = "Publications#CURRENT_DIFF_DISPLAY_ITEM",
			value1 = "${publicationName}");

		if (isSet(fieldValueInPublication)) {
			key_fieldValueInPublication = "${fieldValueInPublication}";

			AssertElementPresent(
				locator1 = "PublicationsChanges#FIELD_VALUE_IN_PUBLICATION",
				value1 = "${fieldValueInPublication}");
		}
	}

}